/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Patient;

import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.JOptionPane;
import model.Patient;
import model.PatientDirectory;

/**
 *
 * @author gorubhambhani
 */
public class CreatePatientJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreatePatientJPanel
     */
    
    PatientDirectory patientDatabase;
    Patient patient;
    
    public CreatePatientJPanel(PatientDirectory patientDatabase, Patient patient) {
        initComponents();
        
        this.patientDatabase = patientDatabase;
        this.patient = patient;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderGrp = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        lblPatientPassword = new javax.swing.JLabel();
        lblPatientUsername = new javax.swing.JLabel();
        tfPatientId = new javax.swing.JTextField();
        tfPatientPassword = new javax.swing.JTextField();
        btnCreatePatient = new javax.swing.JButton();
        lblPatientUsername1 = new javax.swing.JLabel();
        lblPatientUsername2 = new javax.swing.JLabel();
        jcbDoctor = new javax.swing.JComboBox<>();
        jcbHospital = new javax.swing.JComboBox<>();

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Create Patient");

        lblPatientPassword.setText("Create Password");

        lblPatientUsername.setText("Patient ID");

        tfPatientId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPatientIdActionPerformed(evt);
            }
        });

        tfPatientPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPatientPasswordActionPerformed(evt);
            }
        });

        btnCreatePatient.setText("Create");
        btnCreatePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreatePatientActionPerformed(evt);
            }
        });

        lblPatientUsername1.setText("Primary Doctor");

        lblPatientUsername2.setText("Preferred Hospital");

        jcbDoctor.setSelectedItem(null);
        jcbDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbDoctorActionPerformed(evt);
            }
        });

        jcbHospital.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boston Hospital", "Roxbury Hospital", "Newbury Hospital" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPatientUsername1)
                                .addGap(18, 18, 18)
                                .addComponent(jcbDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(118, 118, 118)
                                .addComponent(btnCreatePatient))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPatientUsername)
                                .addGap(18, 18, 18)
                                .addComponent(tfPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPatientPassword)
                                .addGap(18, 18, 18)
                                .addComponent(tfPatientPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPatientUsername2)
                                .addGap(18, 18, 18)
                                .addComponent(jcbHospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientUsername)
                    .addComponent(tfPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientUsername2)
                    .addComponent(jcbHospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientUsername1)
                    .addComponent(jcbDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientPassword)
                    .addComponent(tfPatientPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnCreatePatient)
                .addContainerGap(379, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tfPatientIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPatientIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPatientIdActionPerformed

    private void tfPatientPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPatientPasswordActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tfPatientPasswordActionPerformed

    public String getSelectedGender(){
        Enumeration<AbstractButton> radioButtons = genderGrp.getElements();
        while(radioButtons.hasMoreElements()){
            AbstractButton currentRadioButton = radioButtons.nextElement();
            if (currentRadioButton.isSelected()) {
                return currentRadioButton.getText();
            }
        }
        return null;
    }
    
    private void btnCreatePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreatePatientActionPerformed
        // TODO add your handling code here:
        
        Patient patient = new Patient();
        String chkLen;
        
//        chkLen = tfPatientName.getText().trim();
//        if ((chkLen.isEmpty() && chkLen.length()>=2 && chkLen.chars().allMatch(Character::isLetter)))
//            patient.setPatientName(tfPatientName.getText());
//        else{
//            JOptionPane.showMessageDialog(this, "Invalid Name!");
//            return;
//        }
        
//        chkLen = tfPatientAge.getText().trim();
//        if (!chkLen.isEmpty() && (chkLen.chars().allMatch(Character::isDigit)) && chkLen.length()>=2)
//            patient.setPatientAge(Integer.parseInt(tfPatientAge.getText()));
//        else {
//            JOptionPane.showMessageDialog(this, "Invalid Age!");
//            return;
//        }
        
//        chkLen = tfPatientMobile.getText().trim();
//        if(!chkLen.isEmpty() && chkLen.charAt(0)!='0' && chkLen.length()==10 && chkLen.chars().allMatch(Character::isDigit))
//            patient.setPatientMobile(tfPatientMobile.getText());
//        else {
//            JOptionPane.showMessageDialog(this, "Invalid Mobile Number");
//            return;
//        }
        
        chkLen = tfPatientId.getText().trim();
        if ((chkLen.isEmpty() && chkLen.length()>=2 && chkLen.chars().allMatch(Character::isLetter)))
            patient.setPatientId(tfPatientId.getText());
        else{
            JOptionPane.showMessageDialog(this, "Invalid Name!");
            return;
        }
        
        chkLen = tfPatientPassword.getText().trim();
        if ((chkLen.isEmpty() && chkLen.length()>=2 && chkLen.chars().allMatch(Character::isLetter)))
            patient.setPatientPassword(tfPatientPassword.getText());
        else{
            JOptionPane.showMessageDialog(this, "Invalid Password!");
            return;
        }
        
        if (checkSpace()){
//            String patientName = tfPatientName.getText();
//            int patientAge = Integer.parseInt(tfPatientAge.getText());
//            String patientGender = getSelectedGender();
//            String patientMobile = tfPatientMobile.getText();
            String patientUsername = tfPatientId.getText();
            String patientPassword = tfPatientPassword.getText();
            
            Patient pat = patientDatabase.addNewPatient();
            
//            pat.setPatientName(patientName);
//            pat.setPatientAge(patientAge);
//            pat.setPatientGender(patientGender);
//            pat.setPatientMobile(patientMobile);
            pat.setPatientId(patientUsername);
            pat.setPatientPassword(patientPassword);
            
            JOptionPane.showMessageDialog(this, "New Patient Created.");
            
//            tfPatientName.setText("");
//            tfPatientAge.setText("");
//            tfPatientMobile.setText("");
            tfPatientId.setText("");
            tfPatientPassword.setText("");   
        }
        else {
            JOptionPane.showMessageDialog(this, "Please fill all the fields correctly.");
        }
        
    }//GEN-LAST:event_btnCreatePatientActionPerformed

    private void jcbDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbDoctorActionPerformed
        // TODO add your handling code here:
        if (jcbHospital.getSelectedItem().equals("Boston Hospital")){
            
            jcbDoctor.removeAllItems();
            jcbDoctor.setSelectedItem(null);
            jcbDoctor.addItem("Dr Rahul");
        }
        
        
    }//GEN-LAST:event_jcbDoctorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreatePatient;
    private javax.swing.ButtonGroup genderGrp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox<String> jcbDoctor;
    private javax.swing.JComboBox<String> jcbHospital;
    private javax.swing.JLabel lblPatientPassword;
    private javax.swing.JLabel lblPatientUsername;
    private javax.swing.JLabel lblPatientUsername1;
    private javax.swing.JLabel lblPatientUsername2;
    private javax.swing.JTextField tfPatientId;
    private javax.swing.JTextField tfPatientPassword;
    // End of variables declaration//GEN-END:variables


    private Boolean checkSpace(){
        return !(tfPatientId.getText().length()==0||tfPatientPassword.getText().length()==0);
    }

}