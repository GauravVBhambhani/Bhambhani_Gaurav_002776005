/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.City;
import model.Community;
import model.HealthSystem;
import model.Hospital;
import model.House;


/**
 *
 * @author gorubhambhani
 */
public class CommunityAdmin extends javax.swing.JPanel {
    private HealthSystem healthSystem;
    private String lastHouseAddress;
    
    /**
     * Creates new form CommunityAdmin
     */
    public CommunityAdmin(HealthSystem healthSystem) {
        initComponents();
        this.healthSystem = healthSystem;
        this.lastHouseAddress = "";
        populateTable();
        populateCityComboBox(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        viewbtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tfaddcity = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnaddcity = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfCommunity = new javax.swing.JTextField();
        btnAddComm = new javax.swing.JButton();
        jcbCity = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jcbCity2 = new javax.swing.JComboBox<>();
        btnaddhouse = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        tfaddress = new javax.swing.JTextField();
        jcbComm = new javax.swing.JComboBox<>();
        btnupdatehouse = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Kannada Sangam MN", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Community Admin Panel");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "City", "Community", "House"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        viewbtn.setText("View Details");
        viewbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewbtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel2.setText("Add City");

        jLabel3.setText("Name of City");

        btnaddcity.setText("Add City");
        btnaddcity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddcityActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel4.setText("Add Community");

        jLabel5.setText("Select A City");

        jLabel6.setText("Name of Community");

        btnAddComm.setText("Add Community");
        btnAddComm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCommActionPerformed(evt);
            }
        });

        jcbCity.setSelectedItem(null);

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel7.setText("Add House");

        jLabel8.setText("Select A City");

        jLabel9.setText("Select A Community");

        jcbCity2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbCity2ActionPerformed(evt);
            }
        });

        btnaddhouse.setText("Add House");
        btnaddhouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddhouseActionPerformed(evt);
            }
        });

        jLabel10.setText("House Address");

        tfaddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfaddressActionPerformed(evt);
            }
        });

        btnupdatehouse.setText("Update House");
        btnupdatehouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdatehouseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(btnAddComm)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(tfCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(277, 277, 277)
                                .addComponent(viewbtn))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(btnaddcity)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(tfaddcity))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addGap(18, 18, 18)
                                            .addComponent(jcbCity, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(74, 74, 74)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(jcbCity2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jcbComm, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(18, 18, 18)
                                        .addComponent(tfaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnaddhouse)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnupdatehouse)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewbtn)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfaddcity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnaddcity))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jcbCity2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jcbComm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(tfaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnaddhouse)
                            .addComponent(btnupdatehouse))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jcbCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tfCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddComm)
                .addGap(169, 169, 169))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_viewbtnActionPerformed

    private void btnAddCommActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCommActionPerformed
        // TODO add your handling code here:
        
        String communityName = tfCommunity.getText();
        if (communityName.isEmpty() || communityName.isBlank()) {
            JOptionPane.showMessageDialog(this, "Please enter a community name");
            return;
        }
        
        if (jcbCity.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Please select a city");
            return;
        }
        
        String cityName = jcbCity.getSelectedItem().toString();
        int cityIndex = 0;
        City selectedCity = null;
        for (int i = 0; i < this.healthSystem.getCityDirectory().getCities().size(); i++) {
            City c = this.healthSystem.getCityDirectory().getCities().get(i);
            if (c.getCityName().equals(cityName)) {
                selectedCity = c;
                cityIndex = i;
                break;
            }
        }
        
        for (Community c: selectedCity.getCommunities()) {
            if (c.getCommunity().equals(communityName)) {
                JOptionPane.showMessageDialog(this, "Community already exists");
                return;
            }
        }
        
        Community community = new Community(communityName);
        selectedCity.getCommunities().add(community);
        populateCityComboBox(cityIndex);
        populateCommunityComboBox(selectedCity.getCityName(), 0);
        populateTable();
        
        tfCommunity.setText("");
        
    }//GEN-LAST:event_btnAddCommActionPerformed

    private void btnaddhouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddhouseActionPerformed
        // TODO add your handling code here:
        String address = tfaddress.getText();
        if (address.isEmpty() || address.isBlank()) {
            JOptionPane.showMessageDialog(this, "Please enter an address");
            return;
        }
        
        String cityName = jcbCity2.getSelectedItem().toString();
        if (jcbComm.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "First add a community");
            return;
        }
        String communityName = jcbComm.getSelectedItem().toString();
        
        House house = new House(address);
        
        int cityIndex = 0;
        City selectedCity = null;
        for (int i = 0; i < this.healthSystem.getCityDirectory().getCities().size(); i++) {
            City c = this.healthSystem.getCityDirectory().getCities().get(i);
            if (c.getCityName().equals(cityName)) {
                selectedCity = c;
                cityIndex = i;
                break;
            }
        }
        
        int commIndex = 0;
        Community selectedComm = null;
        for (int i = 0; i < selectedCity.getCommunities().size(); i++) {
            Community c = selectedCity.getCommunities().get(i);
            if (c.getCommunity().equals(communityName)) {
                selectedComm = c;
                commIndex = i;
                break;
            }
        }
        
        for (House h: selectedComm.getHouses()) {
            if (h.getAddress().equals(address)) {
                JOptionPane.showMessageDialog(this, "This address already exists");
                return;
            }
        }
        
        selectedComm.getHouses().add(house);
        populateCityComboBox(cityIndex);
        populateCommunityComboBox(cityName, commIndex);
        populateTable();
        
        tfaddress.setText("");
        
    }//GEN-LAST:event_btnaddhouseActionPerformed

    private void btnupdatehouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdatehouseActionPerformed
        // TODO add your handling code here:
        
        String address = tfaddress.getText();
        if (address.isEmpty() || address.isBlank()) {
            JOptionPane.showMessageDialog(this, "Please enter an address");
            return;
        }
        
        String cityName = jcbCity2.getSelectedItem().toString();
        if (jcbComm.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "First add a community");
            return;
        }
        String communityName = jcbComm.getSelectedItem().toString();
        
        int cityIndex = 0;
        City selectedCity = null;
        for (int i = 0; i < this.healthSystem.getCityDirectory().getCities().size(); i++) {
            City c = this.healthSystem.getCityDirectory().getCities().get(i);
            if (c.getCityName().equals(cityName)) {
                selectedCity = c;
                cityIndex = i;
                break;
            }
        }
        
        int commIndex = 0;
        Community selectedComm = null;
        for (int i = 0; i < selectedCity.getCommunities().size(); i++) {
            Community c = selectedCity.getCommunities().get(i);
            if (c.getCommunity().equals(communityName)) {
                selectedComm = c;
                commIndex = i;
                break;
            }
        }
        
        House selectedHouse = null;
        for (int i = 0; i < selectedComm.getHouses().size(); i++) {
                House h = selectedComm.getHouses().get(i);
                if (h.getAddress().equals(this.lastHouseAddress)) {
                    selectedHouse = h;
                    break;
                }
            }
        if (!this.lastHouseAddress.equals(address)) {
            selectedHouse.setAddress(address);
        }
        
        populateCityComboBox(cityIndex);
        populateCommunityComboBox(cityName, commIndex);
        populateTable();
        
        tfaddress.setText("");
        
    }//GEN-LAST:event_btnupdatehouseActionPerformed

    private void btnaddcityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddcityActionPerformed
        // TODO add your handling code here:
        
        String cityName = tfaddcity.getText();
        if (cityName.isEmpty() || cityName.isBlank()) {
            JOptionPane.showMessageDialog(this, "Please enter a city name");
            return;
        }
        
        for (City city: this.healthSystem.getCityDirectory().getCities()) {
            if (city.getCityName().equals(cityName)) {
                JOptionPane.showMessageDialog(this, "City already exists");
                return;
            }
        }
        
        City city = new City(cityName);
        this.healthSystem.getCityDirectory().addCity(city);
        populateCityComboBox(0);
        populateTable();
        tfaddcity.setText("");
        
    }//GEN-LAST:event_btnaddcityActionPerformed

    private void tfaddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfaddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfaddressActionPerformed

    private void jcbCity2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbCity2ActionPerformed
        // TODO add your handling code here:
        if (jcbCity2.getSelectedItem() != null) {
            String activeCity = jcbCity2.getSelectedItem().toString();
            populateCommunityComboBox(activeCity, 0);
        }
    }//GEN-LAST:event_jcbCity2ActionPerformed

    private void populateTable() {

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        for (City c : this.healthSystem.getCityDirectory().getCities()) {
            if (c.getCommunities().size() == 0) {
                Object[] row = new Object[3];
                row[0] = c;                     
                row[1] = "";
                row[2] = "";
                model.addRow(row);
            }
            for (Community comm: c.getCommunities()) {
                if (comm.getHouses().size() == 0) {
                    Object[] row = new Object[3];
                    row[0] = c;                     
                    row[1] = comm;
                    row[2] = "";
                    model.addRow(row);
                }
                
                for (House hs: comm.getHouses()) {
                    Object[] row = new Object[3];
                    row[0] = c;                     
                    row[1] = comm;
                    row[2] = hs;
                    model.addRow(row);
                }
            }
            

        }

    }
    
    private void populateCityComboBox(int selectedIndex) {
        
        jcbCity.removeAllItems();
        
        for(City c : this.healthSystem.getCityDirectory().getCities()){
            jcbCity.addItem(c.getCityName());
        }
        
        jcbCity.setSelectedIndex(selectedIndex);
        
        jcbCity2.removeAllItems();
        
        for(City c : this.healthSystem.getCityDirectory().getCities()){
            jcbCity2.addItem(c.getCityName());
        }
        
        jcbCity2.setSelectedIndex(selectedIndex);
        
    }
    
    private void populateCommunityComboBox(String activeCity, int selectedIndex) {
        jcbComm.removeAllItems();
        
        City selectedCity = null;
        for (City c: this.healthSystem.getCityDirectory().getCities()) {
            if (c.getCityName().equals(activeCity)) {
                selectedCity = c;
            }
        }
        
        for(Community c : selectedCity.getCommunities()) {
            jcbComm.addItem(c.getCommunity());
        }
        
        try {
            jcbComm.setSelectedIndex(selectedIndex);
        } catch(IllegalArgumentException e) {
            // do nothing
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddComm;
    private javax.swing.JButton btnaddcity;
    private javax.swing.JButton btnaddhouse;
    private javax.swing.JButton btnupdatehouse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> jcbCity;
    private javax.swing.JComboBox<String> jcbCity2;
    private javax.swing.JComboBox<String> jcbComm;
    private javax.swing.JTextField tfCommunity;
    private javax.swing.JTextField tfaddcity;
    private javax.swing.JTextField tfaddress;
    private javax.swing.JButton viewbtn;
    // End of variables declaration//GEN-END:variables
}
