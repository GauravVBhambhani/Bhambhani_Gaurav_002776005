/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.Image;
import java.io.File;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import model.Employee;
import model.EmployeeDirectory;

/**
 *
 * @author gorubhambhani
 */
public class ViewEmployeeJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewEmployeeJPanel
     */
    
    EmployeeDirectory database;
    
    public ViewEmployeeJPanel(EmployeeDirectory database) {
        initComponents();
        
        this.database = database;
        
        populateEmployeeTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderGrp = new javax.swing.ButtonGroup();
        lblTitle = new javax.swing.JLabel();
        workSpace = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblStartDate = new javax.swing.JLabel();
        lblLevel = new javax.swing.JLabel();
        lblTeamInfo = new javax.swing.JLabel();
        lblPosTitle = new javax.swing.JLabel();
        lblMobileNumber = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        tfId = new javax.swing.JTextField();
        tfAge = new javax.swing.JTextField();
        tfLevel = new javax.swing.JTextField();
        tfTeamInfo = new javax.swing.JTextField();
        tfPosTitle = new javax.swing.JTextField();
        tfMobileNumber = new javax.swing.JTextField();
        tfEmail = new javax.swing.JTextField();
        rbMale = new javax.swing.JRadioButton();
        rbFemale = new javax.swing.JRadioButton();
        rbOther = new javax.swing.JRadioButton();
        btnViewDetails = new javax.swing.JButton();
        btnUpdateDetails = new javax.swing.JButton();
        btnDeleteDetails = new javax.swing.JButton();
        btnViewDetails1 = new javax.swing.JButton();
        empImg = new javax.swing.JLabel();
        btnBrowse = new javax.swing.JButton();
        date = new javax.swing.JComboBox<>();
        month = new javax.swing.JComboBox<>();
        year = new javax.swing.JComboBox<>();
        btnSearchId = new javax.swing.JButton();
        btnSearchName = new javax.swing.JButton();
        btnSearchPos = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmployee = new javax.swing.JTable();

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 0, 51));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Employee Details");

        lblName.setText("Name");

        lblId.setText("ID");

        lblAge.setText("Age");

        lblGender.setText("Gender");

        lblStartDate.setText("Start Date");

        lblLevel.setText("Level");

        lblTeamInfo.setText("Team Info");

        lblPosTitle.setText("Position Title");

        lblMobileNumber.setText("Mobile Number");

        lblEmail.setText("Email");

        tfName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNameActionPerformed(evt);
            }
        });

        tfId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfIdActionPerformed(evt);
            }
        });

        tfAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfAgeActionPerformed(evt);
            }
        });

        tfPosTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPosTitleActionPerformed(evt);
            }
        });

        tfMobileNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMobileNumberActionPerformed(evt);
            }
        });

        genderGrp.add(rbMale);
        rbMale.setText("Male");
        rbMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMaleActionPerformed(evt);
            }
        });

        genderGrp.add(rbFemale);
        rbFemale.setText("Female");

        genderGrp.add(rbOther);
        rbOther.setText("Other");
        rbOther.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbOtherActionPerformed(evt);
            }
        });

        btnViewDetails.setText("Search Details");
        btnViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsActionPerformed(evt);
            }
        });

        btnUpdateDetails.setText("Update Details");
        btnUpdateDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateDetailsActionPerformed(evt);
            }
        });

        btnDeleteDetails.setText("Delete Details");
        btnDeleteDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteDetailsActionPerformed(evt);
            }
        });

        btnViewDetails1.setText("View Details");
        btnViewDetails1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetails1ActionPerformed(evt);
            }
        });

        empImg.setBackground(new java.awt.Color(255, 0, 0));
        empImg.setForeground(new java.awt.Color(255, 51, 51));
        empImg.setText("h");

        btnBrowse.setText("Browse");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        date.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }));
        month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthActionPerformed(evt);
            }
        });

        year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022" }));

        btnSearchId.setText("Search by ID");
        btnSearchId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchIdActionPerformed(evt);
            }
        });

        btnSearchName.setText("Search by Name");
        btnSearchName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchNameActionPerformed(evt);
            }
        });

        btnSearchPos.setText("Search by Position");
        btnSearchPos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchPosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout workSpaceLayout = new javax.swing.GroupLayout(workSpace);
        workSpace.setLayout(workSpaceLayout);
        workSpaceLayout.setHorizontalGroup(
            workSpaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workSpaceLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(workSpaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, workSpaceLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(lblEmail)
                        .addGap(25, 25, 25)
                        .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, workSpaceLayout.createSequentialGroup()
                        .addGroup(workSpaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblLevel)
                            .addComponent(lblAge)
                            .addComponent(lblId)
                            .addComponent(lblName)
                            .addComponent(lblGender)
                            .addComponent(lblStartDate)
                            .addComponent(lblTeamInfo)
                            .addComponent(lblPosTitle)
                            .addComponent(lblMobileNumber))
                        .addGap(25, 25, 25)
                        .addGroup(workSpaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, workSpaceLayout.createSequentialGroup()
                                .addComponent(rbMale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbFemale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbOther))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, workSpaceLayout.createSequentialGroup()
                                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, workSpaceLayout.createSequentialGroup()
                                .addGroup(workSpaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tfMobileNumber, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfPosTitle, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfTeamInfo, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfLevel, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfAge, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfId, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfName, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, workSpaceLayout.createSequentialGroup()
                                        .addComponent(btnViewDetails)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnViewDetails1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnUpdateDetails)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(workSpaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnDeleteDetails)
                                    .addComponent(btnSearchId)
                                    .addComponent(btnSearchName)
                                    .addComponent(btnSearchPos))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(workSpaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, workSpaceLayout.createSequentialGroup()
                        .addComponent(btnBrowse)
                        .addGap(76, 76, 76))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, workSpaceLayout.createSequentialGroup()
                        .addComponent(empImg, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))))
        );
        workSpaceLayout.setVerticalGroup(
            workSpaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, workSpaceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(workSpaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(workSpaceLayout.createSequentialGroup()
                        .addGroup(workSpaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdateDetails)
                            .addComponent(btnDeleteDetails)
                            .addComponent(btnViewDetails1)
                            .addComponent(btnViewDetails))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addGroup(workSpaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearchName))
                        .addGap(18, 18, 18)
                        .addGroup(workSpaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblId)
                            .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearchId))
                        .addGap(18, 18, 18)
                        .addGroup(workSpaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAge)
                            .addComponent(tfAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(workSpaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGender)
                            .addComponent(rbMale)
                            .addComponent(rbOther)
                            .addComponent(rbFemale))
                        .addGap(18, 18, 18)
                        .addGroup(workSpaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblStartDate)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(workSpaceLayout.createSequentialGroup()
                        .addComponent(empImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBrowse)
                        .addGap(5, 5, 5)))
                .addGap(18, 18, 18)
                .addGroup(workSpaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLevel)
                    .addComponent(tfLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(workSpaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTeamInfo)
                    .addComponent(tfTeamInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(workSpaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPosTitle)
                    .addComponent(tfPosTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchPos))
                .addGap(18, 18, 18)
                .addGroup(workSpaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMobileNumber)
                    .addComponent(tfMobileNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(workSpaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        tblEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "age", "Gender", "Level", "Position Title", "Email ", "Mobile No", "Joining Date", "Team Info", "Image"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmployeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEmployee);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(workSpace, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(workSpace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    public String getSelectedGender() {
        Enumeration<AbstractButton> radioButtons = genderGrp.getElements();
        while (radioButtons.hasMoreElements()) {
            AbstractButton currentRadioButton = radioButtons.nextElement();
            if (currentRadioButton.isSelected()) {
                return currentRadioButton.getText();
            }
        }
        return null;
    }
    
    private void tfNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNameActionPerformed

    private void tfIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfIdActionPerformed

    private void tfAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfAgeActionPerformed

    private void tfPosTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPosTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPosTitleActionPerformed

    private void tfMobileNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMobileNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMobileNumberActionPerformed

    private void rbMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbMaleActionPerformed

    private void btnViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnViewDetailsActionPerformed

    private void btnUpdateDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateDetailsActionPerformed
        // TODO add your handling code here:
        
//        int getSelectedRowNum = tblEmployee.getSelectedRowCount();
        
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        
        int selectedRowIndex = tblEmployee.getSelectedRow();
        Employee selectedEmp = (Employee) model.getValueAt(selectedRowIndex, 0);

        if(tblEmployee.getSelectedRowCount() == 1){
            String name = tfName.getText();
            String id = tfId.getText();
            int age = Integer.parseInt(tfAge.getText());
            String gender = getSelectedGender();
            String startDate = date.getSelectedItem()+"/"+month.getSelectedItem()+"/"+year.getSelectedItem();
            String level = tfLevel.getText();
            String teamInfo = tfTeamInfo.getText();
            String posTitle = tfPosTitle.getText();
            String mobile = tfMobileNumber.getText();
            String email = tfEmail.getText();
//          String photo

            model.setValueAt(id, tblEmployee.getSelectedRow(), 0);
            model.setValueAt(name, tblEmployee.getSelectedRow(), 1);
            model.setValueAt(age, tblEmployee.getSelectedRow(), 2);
            model.setValueAt(gender, tblEmployee.getSelectedRow(), 3);
            model.setValueAt(level, tblEmployee.getSelectedRow(), 4);
            model.setValueAt(posTitle, tblEmployee.getSelectedRow(),5);
            model.setValueAt(email, tblEmployee.getSelectedRow(), 6);
            model.setValueAt(mobile, tblEmployee.getSelectedRow(), 7);
            model.setValueAt(startDate, tblEmployee.getSelectedRow(),8);
            model.setValueAt(teamInfo, tblEmployee.getSelectedRow(), 9);
            
            selectedEmp.setEmpId(id);
            selectedEmp.setEmpName(name);
            selectedEmp.setEmpAge(age);
            selectedEmp.setEmpGender(gender);
            selectedEmp.setEmpJoinDate(startDate);
            selectedEmp.setEmpLevel(level);
            selectedEmp.setEmpPosTitle(posTitle);
            selectedEmp.setMobile(mobile);
            selectedEmp.setEmpTeamInfo(teamInfo);
            selectedEmp.setEmail(email);
            
            JOptionPane.showMessageDialog(this, "Update Successful!");
        }
        else{
            if(tblEmployee.getRowCount() == 0){
                JOptionPane.showMessageDialog(this, "Table is Empty!");
            }
            else{
                JOptionPane.showMessageDialog(this, "Select single row!");
            }
        }
        
        database.updateEmployee(selectedEmp, selectedRowIndex);
    }//GEN-LAST:event_btnUpdateDetailsActionPerformed

    private void btnDeleteDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteDetailsActionPerformed
        // TODO add your handling code here:
        
        
        int selectedRowIndex = tblEmployee.getSelectedRow();
        
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Row Not Selected!");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        Employee selectedEmp = (Employee) model.getValueAt(selectedRowIndex, 0);
        
        database.deleteEmployee(selectedEmp);
        
        JOptionPane.showMessageDialog(this, "Employee Deleted.");
        
        populateEmployeeTable();
    }//GEN-LAST:event_btnDeleteDetailsActionPerformed

    private void btnViewDetails1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetails1ActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblEmployee.getSelectedRow();
        
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Row Not Selected!");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        Employee selectedEmp = (Employee) model.getValueAt(selectedRowIndex, 0);
        
        tfId.setText(String.valueOf(selectedEmp.getEmpId()));
        tfName.setText(selectedEmp.getEmpName());
        tfAge.setText(String.valueOf(selectedEmp.getEmpAge()));
        
        String gender = selectedEmp.getEmpGender();

        
        if (gender.equalsIgnoreCase("male")){
            rbMale.setSelected(true);
        }
        else if (gender.equalsIgnoreCase("female")){
            rbFemale.setSelected(true);
        }
        else{
            rbOther.setSelected(true);
        }
        
        date.setSelectedItem(selectedEmp.getEmpJoinDate().split("/")[0]);
        month.setSelectedItem(selectedEmp.getEmpJoinDate().split("/")[1]);
        year.setSelectedItem(selectedEmp.getEmpJoinDate().split("/")[2]);
        
        tfLevel.setText(selectedEmp.getEmpLevel());
        tfTeamInfo.setText(selectedEmp.getEmpTeamInfo());
        tfPosTitle.setText(selectedEmp.getEmpPosTitle());
        tfMobileNumber.setText(String.valueOf(selectedEmp.getMobile()));
        tfEmail.setText(selectedEmp.getEmail());
        //tfImg
        
        
    }//GEN-LAST:event_btnViewDetails1ActionPerformed

    private void tblEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmployeeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblEmployeeMouseClicked

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        // TODO add your handling code here:
        
        JFileChooser browseImg = new JFileChooser();
        
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("IMAGES", "png", "jpg", "jpeg");
        browseImg.addChoosableFileFilter(fnef);
        
        int showOpenDialogue = browseImg.showOpenDialog(null);
        if (showOpenDialogue == JFileChooser.APPROVE_OPTION){
            File selectedImg = browseImg.getSelectedFile();
            String selectedImgPath = selectedImg.getAbsolutePath();
            
            JOptionPane.showMessageDialog(null, selectedImgPath);
            
            ImageIcon ic = new ImageIcon(selectedImgPath);
            
            Image image = ic.getImage().getScaledInstance(empImg.getWidth(), empImg.getHeight(), Image.SCALE_SMOOTH);
            
            
            empImg.setIcon(new ImageIcon(image));
        }
        
    }//GEN-LAST:event_btnBrowseActionPerformed

    private void rbOtherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbOtherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbOtherActionPerformed

    private void monthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monthActionPerformed

    private void btnSearchNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchNameActionPerformed
        // TODO add your handling code here:
        searchByName(tfName.getText());

    }//GEN-LAST:event_btnSearchNameActionPerformed

    private void btnSearchIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchIdActionPerformed
        // TODO add your handling code here:
        
        searchByID(tfId.getText());
    }//GEN-LAST:event_btnSearchIdActionPerformed

    private void btnSearchPosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchPosActionPerformed
        // TODO add your handling code here:
        
        searchByPosTitle(tfPosTitle.getText());
    }//GEN-LAST:event_btnSearchPosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnDeleteDetails;
    private javax.swing.JButton btnSearchId;
    private javax.swing.JButton btnSearchName;
    private javax.swing.JButton btnSearchPos;
    private javax.swing.JButton btnUpdateDetails;
    private javax.swing.JButton btnViewDetails;
    private javax.swing.JButton btnViewDetails1;
    private javax.swing.JComboBox<String> date;
    private javax.swing.JLabel empImg;
    private javax.swing.ButtonGroup genderGrp;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblLevel;
    private javax.swing.JLabel lblMobileNumber;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPosTitle;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JLabel lblTeamInfo;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JComboBox<String> month;
    private javax.swing.JRadioButton rbFemale;
    private javax.swing.JRadioButton rbMale;
    private javax.swing.JRadioButton rbOther;
    private javax.swing.JTable tblEmployee;
    private javax.swing.JTextField tfAge;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfId;
    private javax.swing.JTextField tfLevel;
    private javax.swing.JTextField tfMobileNumber;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfPosTitle;
    private javax.swing.JTextField tfTeamInfo;
    private javax.swing.JPanel workSpace;
    private javax.swing.JComboBox<String> year;
    // End of variables declaration//GEN-END:variables

    private void populateEmployeeTable() {
        
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        
        model.setRowCount(0);
        
        for (Employee emp: database.getDatabase()){
            Object[] row = new Object[10];
            
//            row[0] = emp.getEmpId();

            row[0] = emp;
            
            row[1] = emp.getEmpName();
            row[2] = emp.getEmpAge();
            row[3] = emp.getEmpGender();
            row[4] = emp.getEmpLevel();
            row[5] = emp.getEmpPosTitle();
            row[6] = emp.getEmail();
            row[7] = emp.getMobile();
            row[8] = emp.getEmpJoinDate();
            row[9] = emp.getEmpTeamInfo();

            model.addRow(row);
        }
        
    }

    private void searchByName(String text) {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    
        DefaultTableModel model = (DefaultTableModel)tblEmployee.getModel();
        model.setRowCount(0);
        for(Employee emp : database.searchEmployee(text)){
            Object[] row = new Object[11];
            row[0] = emp;
            row[1] = emp.getEmpId();
            row[2] = emp.getEmpAge();
            row[3] = emp.getEmpGender();
            row[4] = emp.getEmpJoinDate();
            row[5] = emp.getEmpLevel();
            row[6] = emp.getEmpTeamInfo();
            row[7] = emp.getEmpPosTitle();
            row[8] = emp.getMobile();
            row[9] = emp.getEmail();
//           row[10] = dir.getGender();  
           model.addRow(row);
    
        }
    }

    private void searchByPosTitle(String text) {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    
        DefaultTableModel model = (DefaultTableModel)tblEmployee.getModel();
        model.setRowCount(0);
        for(Employee emp : database.searchPosTitle(text)){
           Object[] row = new Object[10];
            row[0] = emp;
            row[1] = emp.getEmpId();
            row[2] = emp.getEmpAge();
            row[3] = emp.getEmpGender();
            row[4] = emp.getEmpJoinDate();
            row[5] = emp.getEmpLevel();
            row[6] = emp.getEmpTeamInfo();
            row[7] = emp.getEmpPosTitle();
            row[8] = emp.getMobile();
            row[9] = emp.getEmail();
//           row[10] = emp.getGender();  
           model.addRow(row);
    
    }
}


       private void searchByID(String nameid) {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    
        
          DefaultTableModel model = (DefaultTableModel)tblEmployee.getModel();
          model.setRowCount(0);
          for(Employee emp : database.searchEmployeeID(nameid)){
          Object[] row = new Object[10];
          row[0] = emp;
          row[1] = emp.getEmpId();
          row[2] = emp.getEmpAge();
          row[3] = emp.getEmpGender();
          row[4] = emp.getEmpJoinDate();
          row[5] = emp.getEmpLevel();
          row[6] = emp.getEmpTeamInfo();
          row[7] = emp.getEmpPosTitle();
          row[8] = emp.getMobile();
          row[9] = emp.getEmail();
//          row[10] = emp.getEmpGender();  
          model.addRow(row);
           
        }
    }
}

